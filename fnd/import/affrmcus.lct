# $Header: affrmcus.lct 120.3.12010000.4 2010/03/15 21:37:35 dbowles ship $
# affrmcus -  FND Forms Customizations Loader Configuration
#

COMMENT = "dbdrv: exec fnd bin FNDLOAD bin &phase=daa+70 checkfile:~PROD:~PATH:~FILE &ui_apps 0 Y UPLOAD @FND:patch/115/import/affrmcus.lct @~PROD:~PATH/~FILE" 
      
#
# Entities:
#    FND_FORM_CUSTOM_RULES
#       FND_FORM_CUSTOM_ACTIONS
#          FND_FORM_CUSTOM_PARAMS
#       FND_FORM_CUSTOM_SCOPES
#
# Download Parameters:
#     FUNCTION_NAME - Function Name Filter (Default: no filter)
#     FORM_NAME     - Form Name Filter (Default: no filter)
#     RULE_KEY      - Rule Key filter
#         If NULL (default) then customer personalizations are downloaded.
#         If a filter value is specified, then Oracle personalizations with
#         matching rule keys are downloaded, customer personalizations are NOT.  
#
# Customer Download Example:
#     FNDLOAD apps/apps 0 Y DOWNLOAD affrmcus.lct my.ldt \
#         FND_FORM_CUSTOM_RULES FUNCTION_NAME=FND_FNDSCAUS
#
# Oracle Download Example:
#     FNDLOAD apps/apps 0 Y DOWNLOAD affrmcus.lct my.ldt \
#         FND_FORM_CUSTOM_RULES FUNCTION_NAME=FND_FNDSCAUS RULE_KEY=CLE_UK
#
# Upload Example:
#     FNDLOAD apps/apps 0 Y UPLOAD affrmcus.lct my.ldt
#
# Note: The upload process uses delete-and-replace logic rather than the 
# standard row-level merge.  Each personalization rule is defined for a 
# specific Form or AOL Function, and rules from Oracle Development have an
# additional RULE_KEY tag.  On upload, all existing personalizations in the
# target database that match an uploaded rule's context (Form + Rule_key or 
# Function + Rule_key) are first deleted, then the loader data is inserted.
# Personalization data is never updated.
#
DEFINE FND_FORM_CUSTOM_RULES
 KEY  ID                              VARCHAR2(50)
 BASE FUNCTION_NAME                   VARCHAR2(30)
 BASE DESCRIPTION                     VARCHAR2(255)
 BASE TRIGGER_EVENT                   VARCHAR2(30)
 BASE TRIGGER_OBJECT                  VARCHAR2(100)
 BASE CONDITION                       VARCHAR2(2000)
 BASE SEQUENCE                        VARCHAR2(50)
 BASE CREATED_BY                      VARCHAR2(50)
 BASE CREATION_DATE                   VARCHAR2(11)
 BASE OWNER                           VARCHAR2(4000)
 BASE LAST_UPDATE_DATE                VARCHAR2(11)
 BASE LAST_UPDATE_LOGIN               VARCHAR2(50)
 BASE ENABLED                         VARCHAR2(1)
 BASE FIRE_IN_ENTER_QUERY             VARCHAR2(1)
 BASE RULE_KEY                        VARCHAR2(30)
 BASE FORM_NAME                       VARCHAR2(30)
 BASE RULE_TYPE                       VARCHAR2(1)
 
 DEFINE FND_FORM_CUSTOM_ACTIONS
  KEY   ACTION_ID                           VARCHAR2(50)   
  BASE  SEQUENCE                             VARCHAR2(50)
  BASE PROPERTY_VALUE                       VARCHAR2(4000)
  BASE  ARGUMENT_TYPE                        VARCHAR2(1)
  BASE  CREATED_BY                           VARCHAR2(50)
  BASE  CREATION_DATE                        VARCHAR2(11)
  BASE  OWNER                                VARCHAR2(4000)
  BASE  LAST_UPDATE_DATE                     VARCHAR2(11)
  BASE  LAST_UPDATE_LOGIN                    VARCHAR2(50)
  BASE  TARGET_OBJECT                        VARCHAR2(100)
  BASE  ACTION_TYPE                          VARCHAR2(1)
  BASE  ENABLED                              VARCHAR2(1)
  BASE  OBJECT_TYPE                          VARCHAR2(30)
  BASE  FOLDER_PROMPT_BLOCK                  VARCHAR2(30)
  BASE  MESSAGE_TYPE                         VARCHAR2(1)
  BASE MESSAGE_TEXT                         VARCHAR2(4000)
  BASE  SUMMARY                              VARCHAR2(255)
  BASE  BUILTIN_TYPE                         VARCHAR2(1)
  BASE  BUILTIN_ARGUMENTS                    VARCHAR2(4000)
  BASE  LANGUAGE                             VARCHAR2(4)
  KEY   RULE_ID                              VARCHAR2(50)
  BASE  PROPERTY_NAME                        VARCHAR2(50)
  BASE  MENU_ENTRY                           VARCHAR2(30)
  BASE MENU_LABEL                           VARCHAR2(80)
  BASE  MENU_SEPERATOR                       VARCHAR2(1)
  BASE  MENU_ENABLED_IN                      VARCHAR2(255)
  BASE  MENU_ACTION                          VARCHAR2(1)
  BASE  MENU_ARGUMENT_LONG                   VARCHAR2(2000)
  BASE  MENU_ARGUMENT_SHORT                  VARCHAR2(255)
  BASE  REQUEST_APPLICATION_ID               VARCHAR2(50)
  
  DEFINE FND_FORM_CUSTOM_PARAMS
   KEY  ACTION_ID                            VARCHAR2(50)
   KEY  NAME                                 VARCHAR2(240)
   BASE VALUE                                VARCHAR2(4000)
   BASE SEQUENCE                             VARCHAR2(50)
   BASE DEFAULT_TYPE                         VARCHAR2(1)
   BASE INHERIT                              VARCHAR2(1)
   BASE LAST_UPDATE_DATE                     VARCHAR2(11)
   BASE OWNER                                VARCHAR2(4000)
   BASE CREATED_BY                           VARCHAR2(50)
   BASE CREATION_DATE                        VARCHAR2(11)
   BASE LAST_UPDATE_LOGIN                    VARCHAR2(50)
  END FND_FORM_CUSTOM_PARAMS  
                 
 END FND_FORM_CUSTOM_ACTIONS
 
 DEFINE FND_FORM_CUSTOM_SCOPES
  KEY RULE_ID                                VARCHAR2(50)
  KEY LEVEL_ID                               VARCHAR2(50)
  KEY LEVEL_VALUE                            VARCHAR2(4000)
  BASE LEVEL_VALUE_APPLICATION_ID            VARCHAR2(50)
  BASE LAST_UPDATE_DATE                      VARCHAR2(11)
  BASE OWNER                                 VARCHAR2(4000)
  BASE CREATION_DATE                         VARCHAR2(11)
  BASE CREATED_BY                            VARCHAR2(50)
  BASE LAST_UPDATE_LOGIN                     VARCHAR2(50)
 END FND_FORM_CUSTOM_SCOPES
 
END FND_FORM_CUSTOM_RULES  
  
  
DOWNLOAD FND_FORM_CUSTOM_RULES
  "select  ID,
           FUNCTION_NAME,
           DESCRIPTION,
           TRIGGER_EVENT,
           TRIGGER_OBJECT,
           CONDITION,
           SEQUENCE,
           CREATED_BY,
           to_char(CREATION_DATE, 'YYYY/MM/DD') CREATION_DATE,
           fnd_load_util.owner_name(LAST_UPDATED_BY) OWNER,
           to_char(LAST_UPDATE_DATE, 'YYYY/MM/DD') LAST_UPDATE_DATE,
           LAST_UPDATE_LOGIN,
           ENABLED,
           FIRE_IN_ENTER_QUERY,
           RULE_KEY,
           FORM_NAME,
           RULE_TYPE
   from    fnd_form_custom_rules 
   where  nvl(RULE_KEY,'*NULL*') = nvl(:RULE_KEY,'*NULL*')
          and (:FUNCTION_NAME is null or(:FUNCTION_NAME is not null and function_name like :FUNCTION_NAME))
          and (:FORM_NAME is null or (:FORM_NAME is not null and form_name like :FORM_NAME))
   order by FORM_NAME, FUNCTION_NAME, RULE_TYPE"
           
           
DOWNLOAD FND_FORM_CUSTOM_ACTIONS
   "select ACTION_ID ACTIONS_ID,           
           SEQUENCE,            
           PROPERTY_VALUE,      
           ARGUMENT_TYPE,       
           CREATED_BY,          
           to_char(CREATION_DATE, 'YYYY/MM/DD') CREATION_DATE,       
           fnd_load_util.owner_name(LAST_UPDATED_BY) OWNER,    
           to_char(LAST_UPDATE_DATE, 'YYYY/MM/DD') LAST_UPDATE_DATE, 
           LAST_UPDATE_LOGIN,   
           TARGET_OBJECT,       
           ACTION_TYPE,         
           ENABLED,             
           OBJECT_TYPE,         
           FOLDER_PROMPT_BLOCK, 
           MESSAGE_TYPE,        
           MESSAGE_TEXT,        
           SUMMARY,             
           BUILTIN_TYPE,        
           BUILTIN_ARGUMENTS,   
           LANGUAGE,            
           RULE_ID,             
           PROPERTY_NAME,      
           MENU_ENTRY,          
           MENU_LABEL,          
           MENU_SEPERATOR,      
           MENU_ENABLED_IN,     
           MENU_ACTION,         
           MENU_ARGUMENT_LONG,
           MENU_ARGUMENT_SHORT,
           REQUEST_APPLICATION_ID 
    from fnd_form_custom_actions actions
    where actions.rule_id = :ID"
          
DOWNLOAD FND_FORM_CUSTOM_PARAMS
   "select ACTION_ID,
           NAME,
           VALUE,
           SEQUENCE,
           DEFAULT_TYPE,
           INHERIT,
           to_char(LAST_UPDATE_DATE, 'YYYY/MM/DD') LAST_UPDATE_DATE, 
           fnd_load_util.owner_name(LAST_UPDATED_BY) OWNER,
           CREATED_BY,
           to_char(CREATION_DATE, 'YYYY/MM/DD') CREATION_DATE, 
           LAST_UPDATE_LOGIN
    from fnd_form_custom_params
    where action_id  = :ACTIONS_ID"   
    
DOWNLOAD FND_FORM_CUSTOM_SCOPES
   "select rule_id, 
           level_id,
           decode(level_id,
                       10, to_char(level_value),
                       20, to_char(level_value),
                       30, (select responsibility_key
                             from fnd_responsibility
                             where responsibility_id = LEVEL_VALUE
                             and application_id =  LEVEL_VALUE_APPLICATION_ID),
                       40, fnd_load_util.owner_name(LEVEL_VALUE)) LEVEL_VALUE,
           level_value_application_id,
           to_char(LAST_UPDATE_DATE, 'YYYY/MM/DD') LAST_UPDATE_DATE, 
           fnd_load_util.owner_name(LAST_UPDATED_BY) OWNER,
           to_char(CREATION_DATE, 'YYYY/MM/DD') CREATION_DATE, 
           created_by,
           last_update_login
    from fnd_form_custom_scopes        
    where rule_id = :ID"

UPLOAD FND_FORM_CUSTOM_RULES
BEGIN
   "DECLARE
    f_luby         number; -- entity owner in file
    f_ludate       date;   -- entity update date in file
    f_creator      number;
    --db_luby        number; -- entity owner in db
    --db_ludate      date;   -- entity update date in db 
    f_form_name       varchar2(30);
    f_rule_type    varchar2(30);

   BEGIN
    if (:UPLOAD_MODE='NLS') then return; end if;

    -- initialize
    f_luby      := fnd_load_util.owner_id(:OWNER);
    f_ludate    := nvl(to_date(:LAST_UPDATE_DATE, 'YYYY/MM/DD'), sysdate);
    f_form_name := :FORM_NAME;
    f_rule_type := :RULE_TYPE;

    --  If the LDT file is an old version (no RULE_TYPE), convert to new style
    --     1) RULE_TYPE='A'
    --     2) set form name
    if f_rule_type is NULL then
      f_rule_type := 'A';
      begin
        select g.form_name INTO f_form_name
        from   fnd_form_functions f, fnd_form g
        where  f.form_id = g.form_id
        and    f.function_name = :FUNCTION_NAME;
      exception
        when others then
          f_form_name := :FUNCTION_NAME;
      end;
    end if;

    -- Delete old rule data (code in AFFRRULB.pls)
    FND_FORM_CUSTOM_RULES_PKG.DELETE_SET(:RULE_KEY, f_rule_type, 
                                         :FUNCTION_NAME, f_form_name);

    -- Insert new rule
    insert into FND_FORM_CUSTOM_RULES(
      ID,
      FUNCTION_NAME,
      DESCRIPTION,
      TRIGGER_EVENT,
      TRIGGER_OBJECT,
      CONDITION,
      SEQUENCE,
      CREATED_BY, CREATION_DATE,
      LAST_UPDATED_BY, LAST_UPDATE_DATE, LAST_UPDATE_LOGIN,
      ENABLED,
      FIRE_IN_ENTER_QUERY,
      RULE_KEY,
      FORM_NAME,
      RULE_TYPE)
    values(
      FND_FORM_CUSTOM_RULES_S.NextVal,
      :FUNCTION_NAME,
      :DESCRIPTION,
      :TRIGGER_EVENT,
      :TRIGGER_OBJECT,
      :CONDITION,
      :SEQUENCE,
      f_luby, f_ludate,
      f_luby, f_ludate, -1,
      :ENABLED,
      :FIRE_IN_ENTER_QUERY,
      :RULE_KEY,
      f_form_name,
      f_rule_type);
  END;"

UPLOAD FND_FORM_CUSTOM_ACTIONS
BEGIN
  "DECLARE
     f_luby         number; -- entity owner in file
     f_ludate       date;   -- entity update date in file
   BEGIN
     -- No NLS data
     if (:UPLOAD_MODE='NLS') then return; end if;

     -- initialize
     f_luby := fnd_load_util.owner_id(:OWNER);
     f_ludate := nvl(to_date(:LAST_UPDATE_DATE, 'YYYY/MM/DD'), sysdate);

     insert into FND_FORM_CUSTOM_ACTIONS(
       SEQUENCE,
       PROPERTY_VALUE,
       ARGUMENT_TYPE,
       CREATED_BY, CREATION_DATE,
       LAST_UPDATED_BY, LAST_UPDATE_DATE, LAST_UPDATE_LOGIN,
       TARGET_OBJECT,
       ACTION_TYPE,
       ENABLED,
       OBJECT_TYPE,
       FOLDER_PROMPT_BLOCK,
       MESSAGE_TYPE,
       MESSAGE_TEXT,
       SUMMARY,
       BUILTIN_TYPE,
       BUILTIN_ARGUMENTS,
       LANGUAGE,
       RULE_ID,
       PROPERTY_NAME,
       MENU_ENTRY,
       MENU_LABEL,
       MENU_SEPERATOR,
       MENU_ENABLED_IN,
       MENU_ACTION,
       MENU_ARGUMENT_LONG,
       MENU_ARGUMENT_SHORT,
       ACTION_ID,
       REQUEST_APPLICATION_ID)
     values(
       :SEQUENCE,
       :PROPERTY_VALUE,
       :ARGUMENT_TYPE,
       f_luby, f_ludate,
       f_luby, f_ludate, -1,
       :TARGET_OBJECT,
       :ACTION_TYPE,
       :ENABLED,
       :OBJECT_TYPE,
       :FOLDER_PROMPT_BLOCK,
       :MESSAGE_TYPE,
       :MESSAGE_TEXT,
       :SUMMARY,
       :BUILTIN_TYPE,
       :BUILTIN_ARGUMENTS,
       :LANGUAGE,
       FND_FORM_CUSTOM_RULES_S.CurrVal,
       :PROPERTY_NAME,
       :MENU_ENTRY,
       :MENU_LABEL,
       :MENU_SEPERATOR,
       :MENU_ENABLED_IN,
       :MENU_ACTION,
       :MENU_ARGUMENT_LONG,
       :MENU_ARGUMENT_SHORT,
       FND_FORM_CUSTOM_ACTIONS_S.NextVal,
       :REQUEST_APPLICATION_ID);
   END;"

UPLOAD FND_FORM_CUSTOM_PARAMS
  "DECLARE
     f_luby         number; -- entity owner in file
     f_ludate       date;   -- entity update date in file
   BEGIN
     -- No NLS data
     if (:UPLOAD_MODE='NLS') then return; end if;

     -- Initialize
     f_luby := fnd_load_util.owner_id(:OWNER);
     f_ludate := nvl(to_date(:LAST_UPDATE_DATE, 'YYYY/MM/DD'), sysdate);

     insert into FND_FORM_CUSTOM_PARAMS(
       ACTION_ID,
       NAME,
       VALUE,
       SEQUENCE,
       DEFAULT_TYPE,
       INHERIT,
       LAST_UPDATED_BY, LAST_UPDATE_DATE,
       CREATED_BY, CREATION_DATE, LAST_UPDATE_LOGIN)
     values(
       FND_FORM_CUSTOM_ACTIONS_S.CurrVal,
       :NAME,
       :VALUE,
       :SEQUENCE,
       :DEFAULT_TYPE,
       :INHERIT,
       f_luby, f_ludate,
       f_luby, f_ludate, -1);
   END;"

UPLOAD FND_FORM_CUSTOM_SCOPES
  "DECLARE
     f_luby         number; -- entity owner in file
     f_ludate       date;   -- entity update date in file
     v_level_value  number;
   BEGIN
     -- No NLS data
     if (:UPLOAD_MODE='NLS') then return; end if;

     -- Initialize
     f_luby := fnd_load_util.owner_id(:OWNER);
     f_ludate := nvl(to_date(:LAST_UPDATE_DATE, 'YYYY/MM/DD'), sysdate);

     -- Convert Scope Level Value to ID if needed
     if :LEVEL_ID = 30 then
       -- responsibility level, lookup resp_id
       begin
         select responsibility_id INTO v_level_value
         from   fnd_responsibility
         where  responsibility_key = :LEVEL_VALUE
         and    application_id = :LEVEL_VALUE_APPLICATION_ID;
       exception
          when NO_DATA_FOUND then
             v_level_value := NULL;
       end;
     elsif :LEVEL_ID = 40 then
       -- user level, lookup user_id
       v_level_value := fnd_load_util.owner_id(:LEVEL_VALUE);
     else
       -- already an ID
       v_level_value := :LEVEL_VALUE;
     end if;

     insert into FND_FORM_CUSTOM_SCOPES(
       RULE_ID,
       LEVEL_ID,
       LEVEL_VALUE,
       LEVEL_VALUE_APPLICATION_ID,
       LAST_UPDATED_BY, LAST_UPDATE_DATE,
       CREATED_BY, CREATION_DATE, LAST_UPDATE_LOGIN)
     values(
       FND_FORM_CUSTOM_RULES_S.CurrVal,
       :LEVEL_ID,
       v_level_value,
       :LEVEL_VALUE_APPLICATION_ID,
       f_luby, f_ludate,
       f_luby, f_ludate, -1);
   END;"
     
      
