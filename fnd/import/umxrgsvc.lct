# $Header: umxrgsvc.lct 120.2 2006/04/26 17:08:11 cmehta noship $
#
# umxrgsvc.lct -  Registration services Loader Configuration
# 
# Entities
#  UMX_REG_SERVICES

#
# -- DEFINE SECTION --
#
#   Use this section to specify the structure of the entities.
#
#   ID column values are not portable.  Use an equivalent text value instead.
#   For example, use APPLICATION_SHORT_NAME instead of APPLICATION_ID.
#
#   DATE and NUMBER datatypes should be defined and stored as VARCHAR2(11)
#   and VARCHAR2(50), respectively.
# PARAMETERS
#
#
#
#  While UPLOADING:
#    CUSTOM_MODE - Controls whether a customized row is updated or not.
#                  "FORCE" is to wipe out any customization.
#                  Any value other than "FORCE" is to preserve customization.
#                  Default value is to preserve customization.
#    UPLOAD_MODE - NLS: whenever you run to upload NLS translations.
#                  REPLACE: pre-delete all entries so that only insert is needed
#                  MERGE: find matching row (whether to update it is controlled
#                         by CUSTOM_MODE). If matching row not found, insert it.
# HISTORY
# added new column WF_BUS_LOGIC_EVENT_GUID Ssallaka 03/28/05
# Bug Fix 5182230 Chirag Mehta 04/24/2006

###############################
#
# Registration services -Define 
#
###############################
COMMENT = "dbdrv: exec fnd bin FNDLOAD bin &phase=dat+10 checkfile:~PROD:~PATH:~FILE &ui_apps 0 Y UPLOAD @FND:patch/115/import/umxrgsvc.lct @~PROD:~PATH/~FILE"

DEFINE UMX_REG_SERVICES
 KEY   REG_SERVICE_CODE           VARCHAR2(30)
 BASE  REG_SERVICE_TYPE           VARCHAR2(30)
 BASE  WF_NOTIFICATION_EVENT_GUID VARCHAR2(1000)
 BASE  WF_BUS_LOGIC_EVENT_GUID    VARCHAR2(1000)
 BASE  EMAIL_VERIFICATION_FLAG    VARCHAR2(1)
 BASE  WF_ROLE_NAME               VARCHAR2(320)
 BASE  START_DATE                 VARCHAR2(11)
 BASE  END_DATE                   VARCHAR2(11)
 BASE  AME_TRANSACTION_TYPE_ID    VARCHAR2(50)
 BASE  AME_APPLICATION_SHORT_NAME VARCHAR2(50)
 BASE  APPLICATION_SHORT_NAME     VARCHAR2(50)
 BASE  REG_FUNCTION_NAME          VARCHAR2(4000)
 BASE  LAST_UPDATE_DATE           VARCHAR2(11)
 TRANS DISPLAY_NAME               VARCHAR2(1000)
 TRANS DESCRIPTION                VARCHAR2(2000)
 TRANS USAGE                      VARCHAR2(2000)
 CTX   OWNER                      VARCHAR2(4000)
 CTX   WF_NOTIFICATION_EVENT_NAME VARCHAR2(240)
 CTX   WF_BUS_LOGIC_EVENT_NAME    VARCHAR2(240)
END  UMX_REG_SERVICES

#
# -- DOWNLOAD SECTION --
#     
#   For each entity, specify the SQL statement to use to flesh out
#   its entity definition.  SELECT columns must be in same order and
#   datatype as the entity's attributes as defined above.
#   
#   Convert dates to varchar2 using:
#     to_char(sysdate, 'YYYY/MM/DD')
#     
#   Protect against null parameter passing using
#       and (:parm is null or (:parm is not null and col like :parm))
#

#########################


DOWNLOAD UMX_REG_SERVICES
   "SELECT  urv.REG_SERVICE_CODE,
    urv.REG_SERVICE_TYPE,
    null WF_NOTIFICATION_EVENT_GUID,
    null WF_BUS_LOGIC_EVENT_GUID,
    urv.EMAIL_VERIFICATION_FLAG,
    urv.WF_ROLE_NAME, 
    to_char(urv.START_DATE,'YYYY/MM/DD'), 
    to_char(urv.END_DATE,'YYYY/MM/DD'), 
    urv.AME_TRANSACTION_TYPE_ID,  
    fa1.application_short_name AME_APPLICATION_SHORT_NAME, 
    fa.application_short_name APPLICATION_SHORT_NAME,  
    ff.function_name REG_FUNCTION_NAME,
    to_char(urv.LAST_UPDATE_DATE,'YYYY/MM/DD'),
    urv.DISPLAY_NAME, 
    urv.DESCRIPTION,urv.USAGE,
    fnd_load_util.owner_name(urv.LAST_UPDATED_BY)OWNER,
    wen.NAME WF_NOTIFICATION_EVENT_NAME,
    web.NAME WF_BUS_LOGIC_EVENT_NAME
        
FROM    UMX_REG_SERVICES_VL urv, FND_APPLICATION fa,
        FND_FORM_FUNCTIONS ff, FND_APPLICATION fa1,
        WF_EVENTS wen, WF_EVENTS web
WHERE  URV.reg_service_code like nvl(:REG_SERVICE_CODE,'%')
AND    urv.application_id = fa.application_id
AND    urv.ame_application_id = fa1.application_id (+) 
AND    urv.reg_function_id = ff.function_id (+)
AND    fa.application_short_name like nvl(:APP_SHORT_NAME, '%')
AND    (urv.wf_role_name is null or
       urv.wf_role_name like nvl(:ROLE_NAME,'%'))
AND    urv.WF_NOTIFICATION_EVENT_GUID = wen.GUID
AND    urv.WF_BUS_LOGIC_EVENT_GUID = web.GUID (+) "

# -- UPLOAD section --
#
#   For each entity, specify the pl/sql block to use to upload the
#   entity into the database.  Bind names must match DEFINE attribute names.
#   If the relevant tables have table handlers defined, use the LOAD_ROW
#   procedure.
#
#   Non-leaf entities must include the BEGIN keyword.
#
#   Child entities may use bind names from their parents' definitions.
#
#   Use command line parameters to control branching between desired behavior.
#   For example, in the upload statement below, we use the parameter
#   UPLOAD_MODE to specify whether we are doing a regular upload or a
#   special upload of translated columns.
#


##########################
#
#Reg Services - Upload
#

UPLOAD UMX_REG_SERVICES
 "
  begin 
    if(:UPLOAD_MODE = 'NLS') then
     UMX_REG_SERVICES_PKG.TRANSLATE_ROW (
       X_REG_SERVICE_CODE => :REG_SERVICE_CODE,
       X_LAST_UPDATE_DATE => :LAST_UPDATE_DATE,
       X_DISPLAY_NAME => :DISPLAY_NAME,
       X_DESCRIPTION => :DESCRIPTION,
       X_USAGE => :USAGE,
       X_OWNER => :OWNER,
       X_CUSTOM_MODE => :CUSTOM_MODE
     );
    else

     UMX_REG_SERVICES_PKG.LOAD_ROW (
       X_REG_SERVICE_CODE => :REG_SERVICE_CODE,
       X_REG_SERVICE_TYPE => :REG_SERVICE_TYPE,
       X_WF_NOTIFICATION_EVENT_GUID =>:WF_NOTIFICATION_EVENT_GUID,
       X_WF_BUS_LOGIC_EVENT_GUID =>:WF_BUS_LOGIC_EVENT_GUID,
       X_EMAIL_VERIFICATION_FLAG => :EMAIL_VERIFICATION_FLAG,
       X_APP_SHORT_NAME => :APPLICATION_SHORT_NAME,
       X_START_DATE => :START_DATE,
       X_END_DATE => :END_DATE,
       X_WF_ROLE_NAME => :WF_ROLE_NAME,
       X_REG_FUNCTION_NAME => :REG_FUNCTION_NAME,
       X_AME_APP_SHORT_NAME => :AME_APPLICATION_SHORT_NAME,
       X_AME_TRANSACTION_TYPE_ID => :AME_TRANSACTION_TYPE_ID,
       X_LAST_UPDATE_DATE => :LAST_UPDATE_DATE,
       X_DISPLAY_NAME => :DISPLAY_NAME,
       X_DESCRIPTION => :DESCRIPTION,
       X_USAGE => :USAGE,
       X_OWNER => :OWNER,
       X_CUSTOM_MODE => :CUSTOM_MODE,
       X_WF_NOTIFICATION_EVENT_NAME => :WF_NOTIFICATION_EVENT_NAME,
       X_WF_BUS_LOGIC_EVENT_NAME => :WF_BUS_LOGIC_EVENT_NAME
       );
     end if;
    end;"
